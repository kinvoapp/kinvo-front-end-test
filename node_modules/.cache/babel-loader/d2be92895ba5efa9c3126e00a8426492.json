{"ast":null,"code":"/* MIT license */\n\n/* eslint-disable no-mixed-operators */\nconst cssKeywords = require('color-name'); // NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\n\nconst reverseKeywords = {};\n\nfor (const key of Object.keys(cssKeywords)) {\n  reverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n  rgb: {\n    channels: 3,\n    labels: 'rgb'\n  },\n  hsl: {\n    channels: 3,\n    labels: 'hsl'\n  },\n  hsv: {\n    channels: 3,\n    labels: 'hsv'\n  },\n  hwb: {\n    channels: 3,\n    labels: 'hwb'\n  },\n  cmyk: {\n    channels: 4,\n    labels: 'cmyk'\n  },\n  xyz: {\n    channels: 3,\n    labels: 'xyz'\n  },\n  lab: {\n    channels: 3,\n    labels: 'lab'\n  },\n  lch: {\n    channels: 3,\n    labels: 'lch'\n  },\n  hex: {\n    channels: 1,\n    labels: ['hex']\n  },\n  keyword: {\n    channels: 1,\n    labels: ['keyword']\n  },\n  ansi16: {\n    channels: 1,\n    labels: ['ansi16']\n  },\n  ansi256: {\n    channels: 1,\n    labels: ['ansi256']\n  },\n  hcg: {\n    channels: 3,\n    labels: ['h', 'c', 'g']\n  },\n  apple: {\n    channels: 3,\n    labels: ['r16', 'g16', 'b16']\n  },\n  gray: {\n    channels: 1,\n    labels: ['gray']\n  }\n};\nmodule.exports = convert; // Hide .channels and .labels properties\n\nfor (const model of Object.keys(convert)) {\n  if (!('channels' in convert[model])) {\n    throw new Error('missing channels property: ' + model);\n  }\n\n  if (!('labels' in convert[model])) {\n    throw new Error('missing channel labels property: ' + model);\n  }\n\n  if (convert[model].labels.length !== convert[model].channels) {\n    throw new Error('channel and label counts mismatch: ' + model);\n  }\n\n  const {\n    channels,\n    labels\n  } = convert[model];\n  delete convert[model].channels;\n  delete convert[model].labels;\n  Object.defineProperty(convert[model], 'channels', {\n    value: channels\n  });\n  Object.defineProperty(convert[model], 'labels', {\n    value: labels\n  });\n}\n\nconvert.rgb.hsl = function (rgb) {\n  const r = rgb[0] / 255;\n  const g = rgb[1] / 255;\n  const b = rgb[2] / 255;\n  const min = Math.min(r, g, b);\n  const max = Math.max(r, g, b);\n  const delta = max - min;\n  let h;\n  let s;\n\n  if (max === min) {\n    h = 0;\n  } else if (r === max) {\n    h = (g - b) / delta;\n  } else if (g === max) {\n    h = 2 + (b - r) / delta;\n  } else if (b === max) {\n    h = 4 + (r - g) / delta;\n  }\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0) {\n    h += 360;\n  }\n\n  const l = (min + max) / 2;\n\n  if (max === min) {\n    s = 0;\n  } else if (l <= 0.5) {\n    s = delta / (max + min);\n  } else {\n    s = delta / (2 - max - min);\n  }\n\n  return [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n  let rdif;\n  let gdif;\n  let bdif;\n  let h;\n  let s;\n  const r = rgb[0] / 255;\n  const g = rgb[1] / 255;\n  const b = rgb[2] / 255;\n  const v = Math.max(r, g, b);\n  const diff = v - Math.min(r, g, b);\n\n  const diffc = function (c) {\n    return (v - c) / 6 / diff + 1 / 2;\n  };\n\n  if (diff === 0) {\n    h = 0;\n    s = 0;\n  } else {\n    s = diff / v;\n    rdif = diffc(r);\n    gdif = diffc(g);\n    bdif = diffc(b);\n\n    if (r === v) {\n      h = bdif - gdif;\n    } else if (g === v) {\n      h = 1 / 3 + rdif - bdif;\n    } else if (b === v) {\n      h = 2 / 3 + gdif - rdif;\n    }\n\n    if (h < 0) {\n      h += 1;\n    } else if (h > 1) {\n      h -= 1;\n    }\n  }\n\n  return [h * 360, s * 100, v * 100];\n};\n\nconvert.rgb.hwb = function (rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  let b = rgb[2];\n  const h = convert.rgb.hsl(rgb)[0];\n  const w = 1 / 255 * Math.min(r, Math.min(g, b));\n  b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n  return [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n  const r = rgb[0] / 255;\n  const g = rgb[1] / 255;\n  const b = rgb[2] / 255;\n  const k = Math.min(1 - r, 1 - g, 1 - b);\n  const c = (1 - r - k) / (1 - k) || 0;\n  const m = (1 - g - k) / (1 - k) || 0;\n  const y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n  /*\n  \tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n  */\n  return (x[0] - y[0]) ** 2 + (x[1] - y[1]) ** 2 + (x[2] - y[2]) ** 2;\n}\n\nconvert.rgb.keyword = function (rgb) {\n  const reversed = reverseKeywords[rgb];\n\n  if (reversed) {\n    return reversed;\n  }\n\n  let currentClosestDistance = Infinity;\n  let currentClosestKeyword;\n\n  for (const keyword of Object.keys(cssKeywords)) {\n    const value = cssKeywords[keyword]; // Compute comparative distance\n\n    const distance = comparativeDistance(rgb, value); // Check if its less, if so set as closest\n\n    if (distance < currentClosestDistance) {\n      currentClosestDistance = distance;\n      currentClosestKeyword = keyword;\n    }\n  }\n\n  return currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n  return cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n  let r = rgb[0] / 255;\n  let g = rgb[1] / 255;\n  let b = rgb[2] / 255; // Assume sRGB\n\n  r = r > 0.04045 ? ((r + 0.055) / 1.055) ** 2.4 : r / 12.92;\n  g = g > 0.04045 ? ((g + 0.055) / 1.055) ** 2.4 : g / 12.92;\n  b = b > 0.04045 ? ((b + 0.055) / 1.055) ** 2.4 : b / 12.92;\n  const x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n  const y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n  const z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n  return [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n  const xyz = convert.rgb.xyz(rgb);\n  let x = xyz[0];\n  let y = xyz[1];\n  let z = xyz[2];\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? x ** (1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? y ** (1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? z ** (1 / 3) : 7.787 * z + 16 / 116;\n  const l = 116 * y - 16;\n  const a = 500 * (x - y);\n  const b = 200 * (y - z);\n  return [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n  const h = hsl[0] / 360;\n  const s = hsl[1] / 100;\n  const l = hsl[2] / 100;\n  let t2;\n  let t3;\n  let val;\n\n  if (s === 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5) {\n    t2 = l * (1 + s);\n  } else {\n    t2 = l + s - l * s;\n  }\n\n  const t1 = 2 * l - t2;\n  const rgb = [0, 0, 0];\n\n  for (let i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * -(i - 1);\n\n    if (t3 < 0) {\n      t3++;\n    }\n\n    if (t3 > 1) {\n      t3--;\n    }\n\n    if (6 * t3 < 1) {\n      val = t1 + (t2 - t1) * 6 * t3;\n    } else if (2 * t3 < 1) {\n      val = t2;\n    } else if (3 * t3 < 2) {\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    } else {\n      val = t1;\n    }\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n  const h = hsl[0];\n  let s = hsl[1] / 100;\n  let l = hsl[2] / 100;\n  let smin = s;\n  const lmin = Math.max(l, 0.01);\n  l *= 2;\n  s *= l <= 1 ? l : 2 - l;\n  smin *= lmin <= 1 ? lmin : 2 - lmin;\n  const v = (l + s) / 2;\n  const sv = l === 0 ? 2 * smin / (lmin + smin) : 2 * s / (l + s);\n  return [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n  const h = hsv[0] / 60;\n  const s = hsv[1] / 100;\n  let v = hsv[2] / 100;\n  const hi = Math.floor(h) % 6;\n  const f = h - Math.floor(h);\n  const p = 255 * v * (1 - s);\n  const q = 255 * v * (1 - s * f);\n  const t = 255 * v * (1 - s * (1 - f));\n  v *= 255;\n\n  switch (hi) {\n    case 0:\n      return [v, t, p];\n\n    case 1:\n      return [q, v, p];\n\n    case 2:\n      return [p, v, t];\n\n    case 3:\n      return [p, q, v];\n\n    case 4:\n      return [t, p, v];\n\n    case 5:\n      return [v, p, q];\n  }\n};\n\nconvert.hsv.hsl = function (hsv) {\n  const h = hsv[0];\n  const s = hsv[1] / 100;\n  const v = hsv[2] / 100;\n  const vmin = Math.max(v, 0.01);\n  let sl;\n  let l;\n  l = (2 - s) * v;\n  const lmin = (2 - s) * vmin;\n  sl = s * vmin;\n  sl /= lmin <= 1 ? lmin : 2 - lmin;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}; // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\nconvert.hwb.rgb = function (hwb) {\n  const h = hwb[0] / 360;\n  let wh = hwb[1] / 100;\n  let bl = hwb[2] / 100;\n  const ratio = wh + bl;\n  let f; // Wh + bl cant be > 1\n\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  const i = Math.floor(6 * h);\n  const v = 1 - bl;\n  f = 6 * h - i;\n\n  if ((i & 0x01) !== 0) {\n    f = 1 - f;\n  }\n\n  const n = wh + f * (v - wh); // Linear interpolation\n\n  let r;\n  let g;\n  let b;\n  /* eslint-disable max-statements-per-line,no-multi-spaces */\n\n  switch (i) {\n    default:\n    case 6:\n    case 0:\n      r = v;\n      g = n;\n      b = wh;\n      break;\n\n    case 1:\n      r = n;\n      g = v;\n      b = wh;\n      break;\n\n    case 2:\n      r = wh;\n      g = v;\n      b = n;\n      break;\n\n    case 3:\n      r = wh;\n      g = n;\n      b = v;\n      break;\n\n    case 4:\n      r = n;\n      g = wh;\n      b = v;\n      break;\n\n    case 5:\n      r = v;\n      g = wh;\n      b = n;\n      break;\n  }\n  /* eslint-enable max-statements-per-line,no-multi-spaces */\n\n\n  return [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n  const c = cmyk[0] / 100;\n  const m = cmyk[1] / 100;\n  const y = cmyk[2] / 100;\n  const k = cmyk[3] / 100;\n  const r = 1 - Math.min(1, c * (1 - k) + k);\n  const g = 1 - Math.min(1, m * (1 - k) + k);\n  const b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n  const x = xyz[0] / 100;\n  const y = xyz[1] / 100;\n  const z = xyz[2] / 100;\n  let r;\n  let g;\n  let b;\n  r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n  g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n  b = x * 0.0557 + y * -0.2040 + z * 1.0570; // Assume sRGB\n\n  r = r > 0.0031308 ? 1.055 * r ** (1.0 / 2.4) - 0.055 : r * 12.92;\n  g = g > 0.0031308 ? 1.055 * g ** (1.0 / 2.4) - 0.055 : g * 12.92;\n  b = b > 0.0031308 ? 1.055 * b ** (1.0 / 2.4) - 0.055 : b * 12.92;\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n  return [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n  let x = xyz[0];\n  let y = xyz[1];\n  let z = xyz[2];\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? x ** (1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? y ** (1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? z ** (1 / 3) : 7.787 * z + 16 / 116;\n  const l = 116 * y - 16;\n  const a = 500 * (x - y);\n  const b = 200 * (y - z);\n  return [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n  const l = lab[0];\n  const a = lab[1];\n  const b = lab[2];\n  let x;\n  let y;\n  let z;\n  y = (l + 16) / 116;\n  x = a / 500 + y;\n  z = y - b / 200;\n  const y2 = y ** 3;\n  const x2 = x ** 3;\n  const z2 = z ** 3;\n  y = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n  x = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n  z = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n  x *= 95.047;\n  y *= 100;\n  z *= 108.883;\n  return [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n  const l = lab[0];\n  const a = lab[1];\n  const b = lab[2];\n  let h;\n  const hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n\n  if (h < 0) {\n    h += 360;\n  }\n\n  const c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n  const l = lch[0];\n  const c = lch[1];\n  const h = lch[2];\n  const hr = h / 360 * 2 * Math.PI;\n  const a = c * Math.cos(hr);\n  const b = c * Math.sin(hr);\n  return [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n  const [r, g, b] = args;\n  let value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n  value = Math.round(value / 50);\n\n  if (value === 0) {\n    return 30;\n  }\n\n  let ansi = 30 + (Math.round(b / 255) << 2 | Math.round(g / 255) << 1 | Math.round(r / 255));\n\n  if (value === 2) {\n    ansi += 60;\n  }\n\n  return ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n  // Optimization here; we already know the value and don't need to get\n  // it converted for us.\n  return convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n  const r = args[0];\n  const g = args[1];\n  const b = args[2]; // We use the extended greyscale palette here, with the exception of\n  // black and white. normal palette only has 4 greyscale shades.\n\n  if (r === g && g === b) {\n    if (r < 8) {\n      return 16;\n    }\n\n    if (r > 248) {\n      return 231;\n    }\n\n    return Math.round((r - 8) / 247 * 24) + 232;\n  }\n\n  const ansi = 16 + 36 * Math.round(r / 255 * 5) + 6 * Math.round(g / 255 * 5) + Math.round(b / 255 * 5);\n  return ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n  let color = args % 10; // Handle greyscale\n\n  if (color === 0 || color === 7) {\n    if (args > 50) {\n      color += 3.5;\n    }\n\n    color = color / 10.5 * 255;\n    return [color, color, color];\n  }\n\n  const mult = (~~(args > 50) + 1) * 0.5;\n  const r = (color & 1) * mult * 255;\n  const g = (color >> 1 & 1) * mult * 255;\n  const b = (color >> 2 & 1) * mult * 255;\n  return [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n  // Handle greyscale\n  if (args >= 232) {\n    const c = (args - 232) * 10 + 8;\n    return [c, c, c];\n  }\n\n  args -= 16;\n  let rem;\n  const r = Math.floor(args / 36) / 5 * 255;\n  const g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n  const b = rem % 6 / 5 * 255;\n  return [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n  const integer = ((Math.round(args[0]) & 0xFF) << 16) + ((Math.round(args[1]) & 0xFF) << 8) + (Math.round(args[2]) & 0xFF);\n  const string = integer.toString(16).toUpperCase();\n  return '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n  const match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\n  if (!match) {\n    return [0, 0, 0];\n  }\n\n  let colorString = match[0];\n\n  if (match[0].length === 3) {\n    colorString = colorString.split('').map(char => {\n      return char + char;\n    }).join('');\n  }\n\n  const integer = parseInt(colorString, 16);\n  const r = integer >> 16 & 0xFF;\n  const g = integer >> 8 & 0xFF;\n  const b = integer & 0xFF;\n  return [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n  const r = rgb[0] / 255;\n  const g = rgb[1] / 255;\n  const b = rgb[2] / 255;\n  const max = Math.max(Math.max(r, g), b);\n  const min = Math.min(Math.min(r, g), b);\n  const chroma = max - min;\n  let grayscale;\n  let hue;\n\n  if (chroma < 1) {\n    grayscale = min / (1 - chroma);\n  } else {\n    grayscale = 0;\n  }\n\n  if (chroma <= 0) {\n    hue = 0;\n  } else if (max === r) {\n    hue = (g - b) / chroma % 6;\n  } else if (max === g) {\n    hue = 2 + (b - r) / chroma;\n  } else {\n    hue = 4 + (r - g) / chroma;\n  }\n\n  hue /= 6;\n  hue %= 1;\n  return [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n  const s = hsl[1] / 100;\n  const l = hsl[2] / 100;\n  const c = l < 0.5 ? 2.0 * s * l : 2.0 * s * (1.0 - l);\n  let f = 0;\n\n  if (c < 1.0) {\n    f = (l - 0.5 * c) / (1.0 - c);\n  }\n\n  return [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n  const s = hsv[1] / 100;\n  const v = hsv[2] / 100;\n  const c = s * v;\n  let f = 0;\n\n  if (c < 1.0) {\n    f = (v - c) / (1 - c);\n  }\n\n  return [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n  const h = hcg[0] / 360;\n  const c = hcg[1] / 100;\n  const g = hcg[2] / 100;\n\n  if (c === 0.0) {\n    return [g * 255, g * 255, g * 255];\n  }\n\n  const pure = [0, 0, 0];\n  const hi = h % 1 * 6;\n  const v = hi % 1;\n  const w = 1 - v;\n  let mg = 0;\n  /* eslint-disable max-statements-per-line */\n\n  switch (Math.floor(hi)) {\n    case 0:\n      pure[0] = 1;\n      pure[1] = v;\n      pure[2] = 0;\n      break;\n\n    case 1:\n      pure[0] = w;\n      pure[1] = 1;\n      pure[2] = 0;\n      break;\n\n    case 2:\n      pure[0] = 0;\n      pure[1] = 1;\n      pure[2] = v;\n      break;\n\n    case 3:\n      pure[0] = 0;\n      pure[1] = w;\n      pure[2] = 1;\n      break;\n\n    case 4:\n      pure[0] = v;\n      pure[1] = 0;\n      pure[2] = 1;\n      break;\n\n    default:\n      pure[0] = 1;\n      pure[1] = 0;\n      pure[2] = w;\n  }\n  /* eslint-enable max-statements-per-line */\n\n\n  mg = (1.0 - c) * g;\n  return [(c * pure[0] + mg) * 255, (c * pure[1] + mg) * 255, (c * pure[2] + mg) * 255];\n};\n\nconvert.hcg.hsv = function (hcg) {\n  const c = hcg[1] / 100;\n  const g = hcg[2] / 100;\n  const v = c + g * (1.0 - c);\n  let f = 0;\n\n  if (v > 0.0) {\n    f = c / v;\n  }\n\n  return [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n  const c = hcg[1] / 100;\n  const g = hcg[2] / 100;\n  const l = g * (1.0 - c) + 0.5 * c;\n  let s = 0;\n\n  if (l > 0.0 && l < 0.5) {\n    s = c / (2 * l);\n  } else if (l >= 0.5 && l < 1.0) {\n    s = c / (2 * (1 - l));\n  }\n\n  return [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n  const c = hcg[1] / 100;\n  const g = hcg[2] / 100;\n  const v = c + g * (1.0 - c);\n  return [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n  const w = hwb[1] / 100;\n  const b = hwb[2] / 100;\n  const v = 1 - b;\n  const c = v - w;\n  let g = 0;\n\n  if (c < 1) {\n    g = (v - c) / (1 - c);\n  }\n\n  return [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n  return [apple[0] / 65535 * 255, apple[1] / 65535 * 255, apple[2] / 65535 * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n  return [rgb[0] / 255 * 65535, rgb[1] / 255 * 65535, rgb[2] / 255 * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n  return [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n  return [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n  return [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n  return [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n  return [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n  const val = Math.round(gray[0] / 100 * 255) & 0xFF;\n  const integer = (val << 16) + (val << 8) + val;\n  const string = integer.toString(16).toUpperCase();\n  return '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n  const val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n  return [val / 255 * 100];\n};","map":{"version":3,"sources":["C:/Users/ingrisan/Documents/projeto/kinvo-front-end-test/projeto/node_modules/react-dev-utils/node_modules/color-convert/conversions.js"],"names":["cssKeywords","require","reverseKeywords","key","Object","keys","convert","rgb","channels","labels","hsl","hsv","hwb","cmyk","xyz","lab","lch","hex","keyword","ansi16","ansi256","hcg","apple","gray","module","exports","model","Error","length","defineProperty","value","r","g","b","min","Math","max","delta","h","s","l","rdif","gdif","bdif","v","diff","diffc","c","w","k","m","y","comparativeDistance","x","reversed","currentClosestDistance","Infinity","currentClosestKeyword","distance","z","a","t2","t3","val","t1","i","smin","lmin","sv","hi","floor","f","p","q","t","vmin","sl","wh","bl","ratio","n","y2","x2","z2","hr","atan2","PI","sqrt","cos","sin","args","saturation","round","ansi","color","mult","rem","integer","string","toString","toUpperCase","substring","match","colorString","split","map","char","join","parseInt","chroma","grayscale","hue","pure","mg"],"mappings":"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","sourcesContent":["/* MIT license */\n/* eslint-disable no-mixed-operators */\nconst cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\nmodule.exports = convert;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Infinity;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t2;\n\tlet t3;\n\tlet val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v;  g = n;  b = wh; break;\n\t\tcase 1: r = n;  g = v;  b = wh; break;\n\t\tcase 2: r = wh; g = v;  b = n; break;\n\t\tcase 3: r = wh; g = n;  b = v; break;\n\t\tcase 4: r = n;  g = wh; b = v; break;\n\t\tcase 5: r = v;  g = wh; b = n; break;\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// Assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (~~(args > 50) + 1) * 0.5;\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(char => {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tconst integer = parseInt(colorString, 16);\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet grayscale;\n\tlet hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\n\n\tlet f = 0;\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1.0 - c);\n\tlet f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1.0 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (val << 16) + (val << 8) + val;\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n"]},"metadata":{},"sourceType":"script"}